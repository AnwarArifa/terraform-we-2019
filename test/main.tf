#################################################
#                 Custom Roles                  #
#################################################
resource "google_project_iam_custom_role" "carbon-kubernetes-developer" {
  role_id     = "carbon.developer"
  title       = "Carbon Kubernetes Developer"
  description = "This custom role includes permissoins needed for Logs Configuration Writer, Logs Viewer, Monitoring Viewer, Storage Object Viewer, Viewer,  and Simple permission set to allow devlopers to portforward and exec into pods."
  permissions = ["container.pods.portForward", "container.pods.exec", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "resourcemanager.projects.get", "logging.exclusions.get", "logging.exclusions.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "resourcemanager.projects.get", "cloudnotifications.activities.list", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "resourcemanager.projects.get", "stackdriver.projects.get", "resourcemanager.projects.get"]
}

resource "google_project_iam_custom_role" "carbon-kubernetes-editor" {
  role_id     = "carbon.editor"
  title       = "Carbon Kubernetes Editor"
  description = "This custom role includes permissions needed carbonplatform team to perform primative roles/editor"
  permissions = ["compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalOperations.delete", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setLabels", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.create", "compute.maintenancePolicies.delete", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.use", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.use", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.list", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.addNodes", "compute.nodeGroups.create", "compute.nodeGroups.delete", "compute.nodeGroups.deleteNodes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setNodeTemplate", "compute.nodeTemplates.create", "compute.nodeTemplates.delete", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.projects.setDefaultNetworkTier", "compute.projects.setDefaultServiceAccount", "compute.projects.setUsageExportBucket", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionOperations.delete", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regions.get", "compute.regions.list", "compute.reservations.create", "compute.reservations.delete", "compute.reservations.get", "compute.reservations.list", "compute.reservations.resize", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.delete", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.tokenReviews.create", "datacatalog.categories.getIamPolicy", "datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.update", "datacatalog.entryGroups.create", "datacatalog.entryGroups.delete", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "datacatalog.taxonomies.create", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "datafusion.instances.create", "datafusion.instances.delete", "datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.restart", "datafusion.instances.update", "datafusion.instances.upgrade", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.cancel", "datafusion.operations.get", "datafusion.operations.list", "datalabeling.annotateddatasets.delete", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.create", "datalabeling.annotationspecsets.delete", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.create", "datalabeling.datasets.delete", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.import", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.create", "datalabeling.instructions.delete", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.cancel", "datalabeling.operations.get", "datalabeling.operations.list", "dataprep.projects.use", "dataproc.agents.create", "dataproc.agents.delete", "dataproc.agents.get", "dataproc.agents.list", "dataproc.agents.update", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.update", "dataproc.operations.cancel", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.tasks.lease", "dataproc.tasks.listInvalidatedLeases", "dataproc.tasks.reportStatus", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.update", "dataprocessing.featurecontrols.get", "dataprocessing.featurecontrols.list",    "deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.update", "deploymentmanager.types.list", "dialogflow.agents.create", "dialogflow.agents.delete", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.import", "dialogflow.agents.restore", "dialogflow.agents.search", "dialogflow.agents.train", "dialogflow.agents.update", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.create", "dialogflow.documents.delete", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.create", "dialogflow.entityTypes.createEntity", "dialogflow.entityTypes.delete", "dialogflow.entityTypes.deleteEntity", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.entityTypes.update", "dialogflow.entityTypes.updateEntity", "dialogflow.intents.create", "dialogflow.intents.delete", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.intents.update", "dialogflow.knowledgeBases.create", "dialogflow.knowledgeBases.delete", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dlp.analyzeRiskTemplates.create", "dlp.analyzeRiskTemplates.delete", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.analyzeRiskTemplates.update", "dlp.deidentifyTemplates.create", "dlp.deidentifyTemplates.delete", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.deidentifyTemplates.update", "dlp.inspectTemplates.create", "dlp.inspectTemplates.delete", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.inspectTemplates.update", "dlp.jobTriggers.create", "dlp.jobTriggers.delete", "dlp.jobTriggers.get", "dlp.jobTriggers.list", "dlp.jobTriggers.update", "dlp.jobs.cancel", "dlp.jobs.delete", "dlp.storedInfoTypes.create", "dlp.storedInfoTypes.delete", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dlp.storedInfoTypes.update", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.networks.targetWithPeeringZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.list", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "endpoints.portals.attachCustomDomain", "endpoints.portals.detachCustomDomain", "endpoints.portals.listCustomDomains", "endpoints.portals.update", "errorreporting.applications.list", "errorreporting.errorEvents.create", "errorreporting.errorEvents.delete", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groupMetadata.update", "errorreporting.groups.list", "file.instances.create", "file.instances.delete", "file.instances.get", "file.instances.list", "file.instances.restore", "file.instances.update", "file.locations.get", "file.locations.list", "file.operations.cancel", "file.operations.delete", "file.operations.get", "file.operations.list", "file.snapshots.create", "file.snapshots.delete", "file.snapshots.get", "file.snapshots.list", "file.snapshots.update", "firebase.billingPlans.get", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebase.projects.update", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasecrash.issues.update", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "genomics.datasets.create", "genomics.datasets.delete", "genomics.datasets.get", "genomics.datasets.list", "genomics.datasets.update", "genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.create", "gkehub.memberships.delete", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.memberships.update", "gkehub.operations.cancel", "gkehub.operations.get", "gkehub.operations.list", "healthcare.datasets.create", "healthcare.datasets.deidentify", "healthcare.datasets.delete", "healthcare.datasets.get", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.datasets.update", "healthcare.dicomStores.create", "healthcare.dicomStores.delete", "healthcare.dicomStores.dicomWebDelete", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.dicomWebWrite", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.import", "healthcare.dicomStores.list", "healthcare.dicomStores.update", "healthcare.fhirResources.create", "healthcare.fhirResources.delete", "healthcare.fhirResources.get", "healthcare.fhirResources.patch", "healthcare.fhirResources.purge", "healthcare.fhirResources.update", "healthcare.fhirStores.create", "healthcare.fhirStores.delete", "healthcare.fhirStores.export", "healthcare.fhirStores.get", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.import", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.fhirStores.update", "healthcare.hl7V2Messages.create", "healthcare.hl7V2Messages.delete", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.ingest", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Messages.update", "healthcare.hl7V2Stores.create", "healthcare.hl7V2Stores.delete", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.list", "healthcare.hl7V2Stores.update", "healthcare.operations.cancel", "healthcare.operations.get", "healthcare.operations.list", "iam.roles.get", "iam.roles.list", "iam.serviceAccountKeys.create", "iam.serviceAccountKeys.delete", "iam.serviceAccountKeys.get", "iam.serviceAccountKeys.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.create", "iam.serviceAccounts.delete", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iam.serviceAccounts.update", "iap.projects.getSettings", "iap.projects.updateSettings", "iap.web.getSettings", "iap.web.updateSettings", "iap.webServiceVersions.getSettings", "iap.webServiceVersions.updateSettings", "iap.webServices.getSettings", "iap.webServices.updateSettings", "iap.webTypes.getSettings", "iap.webTypes.updateSettings", "lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run", "logging.exclusions.get", "logging.exclusions.list", "logging.logEntries.create", "logging.logEntries.list", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.delete", "logging.logs.list", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "managedidentities.domains.attachTrust", "managedidentities.domains.create", "managedidentities.domains.delete", "managedidentities.domains.detachTrust", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.reconfigureTrust", "managedidentities.domains.resetpassword", "managedidentities.domains.update", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.cancel", "managedidentities.operations.delete", "managedidentities.operations.get", "managedidentities.operations.list", "ml.jobs.cancel", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.update", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.update", "ml.operations.cancel", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update", "monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update", "monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update", "monitoring.groups.create", "monitoring.groups.delete", "monitoring.groups.get", "monitoring.groups.list", "monitoring.groups.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.delete", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify", "monitoring.publicWidgets.create", "monitoring.publicWidgets.delete", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.publicWidgets.update", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.update", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "orgpolicy.policy.get", "proximitybeacon.attachments.create", "proximitybeacon.attachments.delete", "proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "proximitybeacon.beacons.attach", "proximitybeacon.beacons.create", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "proximitybeacon.beacons.update", "proximitybeacon.namespaces.create", "proximitybeacon.namespaces.delete", "proximitybeacon.namespaces.get", "proximitybeacon.namespaces.list", "proximitybeacon.namespaces.update", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.update", "pubsub.topics.updateTag", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.update", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamPolicyRecommendations.update", "recommender.locations.get", "recommender.locations.list", "redis.instances.create", "redis.instances.delete", "redis.instances.export", "redis.instances.get", "redis.instances.import", "redis.instances.list", "redis.instances.update", "redis.locations.get", "redis.locations.list", "redis.operations.cancel", "redis.operations.delete", "redis.operations.get", "redis.operations.list", "remotebuildexecution.actions.create", "remotebuildexecution.actions.delete", "remotebuildexecution.actions.get", "remotebuildexecution.actions.update", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.botsessions.create", "remotebuildexecution.botsessions.update", "remotebuildexecution.instances.create", "remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.get", "remotebuildexecution.logstreams.update", "remotebuildexecution.workerpools.create", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list", "remotebuildexecution.workerpools.update", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.update", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.delete", "run.revisions.get", "run.revisions.list", "run.routes.get", "runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.list", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.list", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.list", "runtimeconfig.waiters.update", "servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.create", "servicebroker.bindings.delete", "servicebroker.bindings.get", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.catalogs.create", "servicebroker.catalogs.delete", "servicebroker.catalogs.get", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.create", "servicebroker.instances.delete", "servicebroker.instances.get", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "servicebroker.instances.update", "serviceconsumermanagement.consumers.get", "serviceconsumermanagement.quota.get", "serviceconsumermanagement.quota.update", "serviceconsumermanagement.tenancyu.addResource", "serviceconsumermanagement.tenancyu.create", "serviceconsumermanagement.tenancyu.delete", "serviceconsumermanagement.tenancyu.list", "serviceconsumermanagement.tenancyu.removeResource", "servicemanagement.services.bind", "servicemanagement.services.check", "servicemanagement.services.create", "servicemanagement.services.delete", "servicemanagement.services.get", "servicemanagement.services.list", "servicemanagement.services.quota", "servicemanagement.services.report", "servicemanagement.services.update", "servicenetworking.operations.cancel", "servicenetworking.operations.delete", "servicenetworking.operations.get", "servicenetworking.operations.list", "servicenetworking.services.addSubnetwork", "servicenetworking.services.get", "serviceusage.apiKeys.create", "serviceusage.apiKeys.delete", "serviceusage.apiKeys.get", "serviceusage.apiKeys.getProjectForKey", "serviceusage.apiKeys.list", "serviceusage.apiKeys.regenerate", "serviceusage.apiKeys.revert", "serviceusage.apiKeys.update", "serviceusage.operations.cancel", "serviceusage.operations.delete", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.quotas.update", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use", "source.repos.get", "source.repos.getIamPolicy", "source.repos.list", "spanner.databaseOperations.cancel", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.create", "spanner.databases.drop", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.read", "spanner.databases.select", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instanceOperations.cancel", "spanner.instanceOperations.delete", "spanner.instanceOperations.get", "spanner.instanceOperations.list", "spanner.instances.create", "spanner.instances.delete", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.instances.update", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list", "stackdriver.resourceMetadata.write", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.list", "storage.hmacKeys.create", "storage.hmacKeys.delete", "storage.hmacKeys.get", "storage.hmacKeys.list", "storage.hmacKeys.update", "storagetransfer.jobs.create", "storagetransfer.jobs.delete", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.jobs.update", "storagetransfer.operations.cancel", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.operations.pause", "storagetransfer.operations.resume", "storagetransfer.projects.getServiceAccount", "subscribewithgoogledeveloper.tools.get", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.create", "tpu.nodes.delete", "tpu.nodes.get", "tpu.nodes.list", "tpu.nodes.reimage", "tpu.nodes.reset", "tpu.nodes.start", "tpu.nodes.stop", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list", "vmmigration.deployments.create", "vmmigration.deployments.get", "vmmigration.deployments.list", "vpcaccess.connectors.create", "vpcaccess.connectors.delete", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list"]
}

resource "google_project_iam_custom_role" "carbon-gcs-bucket-owner" {
  role_id     = "carbon.gcs_owner"
  title       = "Carbon GCS Owner"
  description = "This custom role includes permissions for gcs owners. At this point this only includes storage object viewers."
  permissions = ["resourcemanager.projects.get", "storage.objects.get", "storage.objects.list"]
}

#################################################
#             DataStore Permissions             #
#################################################
resource "google_project_iam_member" "enable_seo_datastore_access" {
  project = "${var.services_project}"
  role    = "roles/datastore.user"
  count   = "${var.enable_seo_datastore_access}"
  member  = "group:gcp_ad_digital_platform_consumer_seo@gcp.lowes.com"
}

#################################################
#        General AD group permissions.          #
#################################################
resource "google_project_iam_member" "services_digital_architect" {
  project = "${var.services_project}"
  count   = "${length(var.gcp_ad_digital_architect_role_binding)}"
  role    = "${element(var.gcp_ad_digital_architect_role_binding, count.index)}"
  member  = "group:${var.gcp_ad_digital_architect_group_name}@gcp.lowes.com"
}

resource "google_project_iam_member" "services_devops_lead" {
  depends_on = ["google_project_iam_custom_role.carbon-kubernetes-editor"]
  project = "${var.services_project}"
  count   = "${length(var.gcp_ad_digital_devops_lead_role_binding)}"
  role    = "${element(var.gcp_ad_digital_devops_lead_role_binding, count.index)}"
  member  = "group:${var.gcp_ad_digital_devops_lead_group_name}@gcp.lowes.com"
}

resource "google_project_iam_member" "services_devops_lead_role" {
  depends_on  = ["google_project_iam_custom_role.carbon-kubernetes-editor"]
  project     = "${var.services_project}"
  role        = "${lookup(var.gcp_ad_digital_devops_lead_prj_role_binding,var.services_project)}"
  member  = "group:${var.gcp_ad_digital_devops_lead_group_name}@gcp.lowes.com"
}


#################################################
#    Consumer specific AD group permissions.    #
#################################################
resource "google_project_iam_member" "services_consumer_group_view" {
    project = "${var.services_project}"
    count   = "${length(var.gcp_ad_digital_platform_consumer_group_names)}"
    role    = "roles/viewer"
    member  = "group:${element(var.gcp_ad_digital_platform_consumer_group_names, count.index)}@gcp.lowes.com"
}

resource "google_project_iam_member" "services_consumer_group_container_developer" {
    depends_on = ["google_project_iam_custom_role.carbon-kubernetes-developer"]
    project   = "${var.services_project}"
    count     = "${var.enable_privileged_pod_access ? length(var.gcp_ad_digital_platform_consumer_group_names) : 0}"
    role      = "projects/${var.services_project}/roles/carbon.developer"
    member    = "group:${element(var.gcp_ad_digital_platform_consumer_group_names, count.index)}@gcp.lowes.com"
}

resource "google_project_iam_member" "services_digital_group_carbon_developer" {
    project   = "${var.services_project}"
    count     = "${length(var.gcp_ad_digital_carbon_developer_names)}"
    role      = "projects/${var.services_project}/roles/carbon.developer"
    member    = "group:${element(var.gcp_ad_digital_carbon_developer_names, count.index)}@gcp.lowes.com"
}

